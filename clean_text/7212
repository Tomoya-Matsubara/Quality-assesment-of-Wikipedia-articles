
Systems engineering techniques are used in complex projects: spacecraft design, computer chip design, robotics, software integration, and bridge building. Systems engineering uses a host of tools that include modeling and simulation, requirements analysis and scheduling to manage complexity.

Systems engineering (also known as Systems design engineering) is an interdisciplinary field of engineering that focuses on how complex engineering projects should be designed and managed. Issues such as logistics, the coordination of different teams, and automatic control of machinery become more difficult when dealing with large, complex projects. Systems engineering deals with work-processes and tools to handle such projects, and it overlaps with both technical and human-centered disciplines such as control engineering and project management.
History

QFD House of Quality for Enterprise Product Development Processes

The term systems engineering can be traced back to Bell Telephone Laboratories in the 1940s.1 The need to identify and manipulate the properties of a system as a whole, which in complex engineering projects may greatly differ from the sum of the parts' properties, motivated the Department of Defense, NASA, and other industries to apply the discipline.2
When it was no longer possible to rely on design evolution to improve upon a system and the existing tools were not sufficient to meet growing demands, new methods began to be developed that addressed the complexity directly.3 The evolution of systems engineering, which continues to this day, comprises the development and identification of new methods and modeling techniques. These methods aid in better comprehension of engineering systems as they grow more complex. Popular tools that are often used in the Systems Engineering context were developed during these times, including USL, UML, QFD, and IDEF0.
In 1990, a professional society for systems engineering, the National Council on Systems Engineering (NCOSE), was founded by representatives from a number of US corporations and organizations. NCOSE was created to address the need for improvements in systems engineering practices and education. As a result of growing involvement from systems engineers outside of the U.S., the name of the organization was changed to the International Council on Systems Engineering (INCOSE) in 1995.4 Schools in several countries offer graduate programs in systems engineering, and continuing education options are also available for practicing engineers.5
Concept



Some definitions




&quot;An interdisciplinary approach and means to enable the realization of successful systems&quot;6 — INCOSE handbook, 2004.


&quot;Systems engineering is a robust approach to the design, creation, and operation of systems. In simple terms, the approach consists of identification and quantification of system goals, creation of alternative system design concepts, performance of design trades, selection and implementation of the best design, verification that the design is properly built and integrated, and post-implementation assessment of how well the system meets (or met) the goals.&quot;7 — NASA Systems engineering handbook, 1995.


&quot;The Art and Science of creating effective systems, using whole system, whole life principles&quot; OR &quot;The Art and Science of creating optimal solution systems to complex issues and problems&quot;8 — Derek Hitchins, Prof. of Systems Engineering, former president of INCOSE (UK), 2007.


&quot;The concept from the engineering standpoint is the evolution of the engineering scientist, i.e., the scientific generalist who maintains a broad outlook. The method is that of the team approach. On large-scale-system problems, teams of scientists and engineers, generalists as well as specialists, exert their joint efforts to find a solution and physically realize it...The technique has been variously called the systems approach or the team development method.&quot;9 — Harry H. Goode &amp; Robert E. Machol, 1957.


&quot;The Systems Engineering method recognizes each system is an integrated whole even though composed of diverse, specialized structures and sub-functions. It further recognizes that any system has a number of objectives and that the balance between them may differ widely from system to system. The methods seek to optimize the overall system functions according to the weighted objectives and to achieve maximum compatibility of its parts.&quot;10 — ''Systems Engineering Tools by Harold Chestnut, 1965.



Systems Engineering signifies both an approach and, more recently, as a discipline in engineering. The aim of education in Systems Engineering is to simply formalize the approach and in doing so, identify new methods and research opportunities similar to the way it occurs in other fields of engineering. As an approach, Systems Engineering is holistic and interdisciplinary in flavor.
Holistic view
Systems Engineering focuses on analysing and eliciting customer needs and required functionality early in the development cycle, documenting requirements, then proceeding with design synthesis and system validation while considering the complete problem, the system lifecycle. Oliver et al. claim that the systems engineering process can be decomposed into

a Systems Engineering Technical Process, and
a Systems Engineering Management Process.

Within Oliver's model, the goal of the Management Process is to organize the technical effort in the lifecycle, while the Technical Process includes assessing available information, defining effectiveness measures, to create a behavior model, create a structure model, perform trade-off analysis, and create sequential build &amp; test plan.11
Depending on their application, although there are several models that are used in the industry, all of them aim to identify the relation between the various stages mentioned above and incorporate feedback. Examples of such models include the Waterfall model and the VEE model.12
Interdisciplinary field
System development often requires contribution from diverse technical disciplines.13 By providing a systems (holistic) view of the development effort, systems engineering helps meld all the technical contributors into a unified team effort, forming a structured development process that proceeds from concept to production to operation and, in some cases, to termination and disposal.
This perspective is often replicated in educational programs in that Systems Engineering courses are taught by faculty from other engineering departments which, in effect, helps create an interdisciplinary environment.1415
Managing complexity
The need for systems engineering arose with the increase in complexity of systems and projects. When speaking in this context, complexity incorporates not only engineering systems, but also the logical human organization of data. At the same time, a system can become more complex due to an increase in size as well as with an increase in the amount of data, variables, or the number of fields that are involved in the design. The International Space Station is an example of such a system.
The development of smarter control algorithms, microprocessor design, and analysis of environmental systems also come within the purview of systems engineering. Systems engineering encourages the use of tools and methods to better comprehend and manage complexity in systems. Some examples of these tools can be seen here:16

Modeling and Simulation,
Optimization,
System dynamics,
Systems analysis,
Statistical analysis,
Reliability analysis, and
Decision making

Taking an interdisciplinary approach to engineering systems is inherently complex since the behavior of and interaction among system components is not always immediately well defined or understood. Defining and characterizing such systems and subsystems and the interactions among them is one of the goals of systems engineering. In doing so, the gap that exists between informal requirements from users, operators, marketing organizations, and technical specifications is successfully bridged.
Scope
 One way to understand the motivation behind systems engineering is to see it as a method, or practice, to identify and improve common rules that exist within a wide variety of systems. Keeping this in mind, the principles of Systems Engineering — holism, emergence, behavior, boundary, et al. — can be applied to any system, complex or otherwise, provided systems thinking is employed at all levels.17 Besides defense and aerospace, many information and technology based companies, software development firms, and industries in the field of electronics &amp; communications require Systems engineers as part of their team.18
An analysis by the INCOSE Systems Engineering center of excellence (SECOE) indicates that optimal effort spent on Systems Engineering is about 15-20% of the total project effort.19 At the same time, studies have shown that Systems Engineering essentially leads to reduction in costs among other benefits.20 However, no quantitative survey at a larger scale encompassing a wide variety of industries has been conducted until recently. Such studies are underway to determine the effectiveness and quantify the benefits of Systems engineering.2122
Systems engineering encourages the use of modeling and simulation to validate assumptions or theories on systems and the interactions within them.2324
Use of methods that allow early detection of possible failures, in Safety engineering, are integrated into the design process. At the same time, decisions made at the beginning of a project whose consequences are not clearly understood can have enormous implications later in the life of a system, and it is the task of the modern systems engineer to explore these issues and make critical decisions. There is no method which guarantees that decisions made today will still be valid when a system goes into service years or decades after it is first conceived but there are techniques to support the process of systems engineering. Examples include the use of soft systems methodology, Jay Wright Forrester's System dynamics method and the Unified Modeling Language (UML), each of which are currently being explored, evaluated and developed to support the engineering decision making process.
Education

Education in systems engineering is often seen as an extension to the regular engineering courses,25 reflecting the industry attitude that engineering students need a foundational background in one of the traditional engineering disciplines (e.g. mechanical engineering, industrial engineering, computer engineering, electrical engineering) plus practical, real-world experience in order to be effective as systems engineers. Undergraduate university programs in systems engineering are rare.
INCOSE maintains a continuously updated Directory of Systems Engineering Academic Programs worldwide.26 As of 2006, there are about 75 institutions in United States that offer 130 undergraduate and graduate programs in systems engineering. Education in systems engineering can be taken as SE-centric or Domain-centric.

SE-centric programs treat systems engineering as a separate discipline and all the courses are taught focusing on systems engineering practice and techniques.
Domain-centric programs offer systems engineering as an option that can be exercised with another major field in engineering.

Both these patterns cater to educate the systems engineer who is able to oversee interdisciplinary projects with the depth required of a core-engineer.27
Systems engineering topics
Systems engineering tools are strategies, procedures, and techniques that aid in performing systems engineering on a project or product. The purpose of these tools vary from database management, graphical browsing, simulation, and reasoning, to document production, neutral import/export and more.28
System
There are many definitions of what a system is in the field of systems engineering. Below are a few authoritative definitions:

ANSI/EIA-632-1999: &quot;An aggregation of end products and enabling products to achieve a given purpose.&quot;29
IEEE Std 1220-1998: &quot;A set or arrangement of elements and processes that are related and whose behavior satisfies customer/operational needs and provides for life cycle sustainment of the products.&quot;30
ISO/IEC 15288:2008: &quot;A combination of interacting elements organized to achieve one or more stated purposes.&quot;31
NASA Systems Engineering Handbook: &quot;(1) The combination of elements that function together to produce the capability to meet a need. The elements include all hardware, software, equipment, facilities, personnel, processes, and procedures needed for this purpose. (2) The end product (which performs operational functions) and enabling products (which provide life-cycle support services to the operational end products) that make up a system.&quot;32
INCOSE Systems Engineering Handbook: &quot;homogeneous entity that exhibits predefined behavior in the real world and is composed of heterogeneous parts that do not individually exhibit that behavior and an integrated configuration of components and/or subsystems.&quot;33
INCOSE: &quot;A system is a construct or collection of different elements that together produce results not obtainable by the elements alone. The elements, or parts, can include people, hardware, software, facilities, policies, and documents; that is, all things required to produce systems-level results. The results include system level qualities, properties, characteristics, functions, behavior and performance. The value added by the system as a whole, beyond that contributed independently by the parts, is primarily created by the relationship among the parts; that is, how they are interconnected.&quot;34

The systems engineering process
Depending on their application, tools are used for various stages of the systems engineering process:35





Using models
Models play important and diverse roles in systems engineering. A model can be defined in several ways, including:36

An abstraction of reality designed to answer specific questions about the real world
An imitation, analogue, or representation of a real world process or structure; or
A conceptual, mathematical, or physical tool to assist a decision maker.

Together, these definitions are broad enough to encompass physical engineering models used in the verification of a system design, as well as schematic models like a functional flow block diagram and mathematical (i.e., quantitative) models used in the trade study process. This section focuses on the last.37
The main reason for using mathematical models and diagrams in trade studies is to provide estimates of system effectiveness, performance or technical attributes, and cost from a set of known or estimable quantities. Typically, a collection of separate models is needed to provide all of these outcome variables. The heart of any mathematical model is a set of meaningful quantitative relationships among its inputs and outputs. These relationships can be as simple as adding up constituent quantities to obtain a total, or as complex as a set of differential equations describing the trajectory of a spacecraft in a gravitational field. Ideally, the relationships express causality, not just correlation.38
Tools for graphic representations
Initially, when the primary purpose of a systems engineer is to comprehend a complex problem, graphic representations of a system are used to communicate a system's functional and data requirements.39 Common graphical representations include:

Functional Flow Block Diagram (FFBD)
Data Flow Diagram (DFD)
N2 (N-Squared) Chart
IDEF0 Diagram
UML Use case diagram
UML Sequence diagram
USL Function Maps and Type Maps.

A graphical representation relates the various subsystems or parts of a system through functions, data, or interfaces. Any or each of the above methods are used in an industry based on its requirements. For instance, the N2 chart may be used where interfaces between systems is important. Part of the design phase is to create structural and behavioral models of the system.
Once the requirements are understood, it is now the responsibility of a Systems engineer to refine them, and to determine, along with other engineers, the best technology for a job. At this point starting with a trade study, systems engineering encourages the use of weighted choices to determine the best option. A decision matrix, or Pugh method, is one way (QFD is another) to make this choice while considering all criteria that are important. The trade study in turn informs the design which again affects the graphic representations of the system (without changing the requirements). In an SE process, this stage represents the iterative step that is carried out until a feasible solution is found. A decision matrix is often populated using techniques such as statistical analysis, reliability analysis, system dynamics (feedback control), and optimization methods.
At times a systems engineer must assess the existence of feasible solutions, and rarely will customer inputs arrive at only one. Some customer requirements will produce no feasible solution. Constraints must be traded to find one or more feasible solutions. The customers' wants become the most valuable input to such a trade and cannot be assumed. Those wants/desires may only be discovered by the customer once the customer finds that he has overconstrained the problem. Most commonly, many feasible solutions can be found, and a sufficient set of constraints must be defined to produce an optimal solution. This situation is at times advantageous because one can present an opportunity to improve the design towards one or many ends, such as cost or schedule. Various modeling methods can be used to solve the problem including constraints and a cost function.
Systems Modeling Language (SysML), a modeling language used for systems engineering applications, supports the specification, analysis, design, verification and validation of a broad range of complex systems.40
Universal Systems Language (USL) is a systems oriented object modeling language with executable (computer independent) semantics for defining complex systems, including software.41
Closely related fields
Many related fields may be considered tightly coupled to systems engineering. These areas have contributed to the development of systems engineering as a distinct entity.

Cognitive systems engineering
Cognitive systems engineering (CSE) is a specific approach to the description and analysis of human-machine systems or sociotechnical systems.42 The three main themes of CSE are how humans cope with complexity, how work is accomplished by the use of artefacts, and how human-machine systems and socio-technical systems can be described as joint cognitive systems. CSE has since its beginning become a recognised scientific discipline, sometimes also referred to as Cognitive Engineering. The concept of a Joint Cognitive System (JCS) has in particular become widely used as a way of understanding how complex socio-technical systems can be described with varying degrees of resolution. The experience with CSE has been described in two books that summarises the field after more than 20 years of work, namely43 and 44.



Configuration Management
Like Systems Engineering, Configuration Management as practiced in the defence and aerospace industry is a broad systems-level practice. The field parallels the taskings of Systems Engineering; where Systems Engineering deals with requirements development, allocation to development items and verification, Configuration Management deals with requirements capture, traceability to the development item, and audit of development item to ensure that it has achieved the desired functionality that Systems Engineering and/or Test and Verification Engineering have proven out through objective testing.



Control engineering
Control engineering and its design and implementation of control systems, used extensively in nearly every industry, is a large sub-field of Systems Engineering. The cruise control on an automobile and the guidance system for a ballistic missile are two examples. Control systems theory is an active field of applied mathematics involving the investigation of solution spaces and the development of new methods for the analysis of the control process.



Industrial engineering
Industrial engineering is a branch of engineering that concerns the development, improvement, implementation and evaluation of integrated systems of people, money, knowledge, information, equipment, energy, material and process. Industrial engineering draws upon the principles and methods of engineering analysis and synthesis, as well as mathematical, physical and social sciences together with the principles and methods of engineering analysis and design to specify, predict and evaluate the results to be obtained from such systems.



Interface design
Interface design and its specification are concerned with assuring that the pieces of a system connect and inter-operate with other parts of the system and with external systems as necessary. Interface design also includes assuring that system interfaces be able to accept new features, including mechanical, electrical and logical interfaces, including reserved wires, plug-space, command codes and bits in communication protocols. This is known as extensibility. Human-Computer Interaction (HCI) or Human-Machine Interface (HMI) is another aspect of interface design, and is a critical aspect of modern Systems Engineering. Systems engineering principles are applied in the design of network protocols for local-area networks and wide-area networks.



Operations research
Operations research supports systems engineering. The tools of operations research are used in systems analysis, decision making, and trade studies. Several schools teach SE courses within the operations research or industrial engineering department, highlighting the role systems engineering plays in complex projects. operations research, briefly, is concerned with the optimization of a process under multiple constraints.45



Reliability engineering
Reliability engineering is the discipline of ensuring a system will meet the customer's expectations for reliability throughout its life; i.e. it will not fail more frequently than expected. Reliability engineering applies to all aspects of the system. It is closely associated with maintainability, availability and logistics engineering. Reliability engineering is always a critical component of safety engineering, as in failure modes and effects analysis (FMEA) and hazard fault tree analysis, and of security engineering. Reliability engineering relies heavily on statistics, probability theory and reliability theory for its tools and processes.



Performance engineering
Performance engineering is the discipline of ensuring a system will meet the customer's expectations for performance throughout its life. Performance is usually defined as the speed with which a certain operation is executed or the capability of executing a number of such operations in a unit of time. Performance may be degraded when an operations queue to be executed is throttled when the capacity is of the system is limited. For example, the performance of a packet-switched network would be characterised by the end-to-end packet transit delay or the number of packets switched within an hour. The design of high-performance systems makes use of analytical or simulation modeling, whereas the delivery of high-performance implementation involves thorough performance testing. Performance engineering relies heavily on statistics, queuing theory and probability theory for its tools and processes.



Program management and project management.
Program management (or programme management) has many similarities with systems engineering, but has broader-based origins than the engineering ones of systems engineering. Project management is also closely related to both program management and systems engineering.



Safety engineering
The techniques of safety engineering may be applied by non-specialist engineers in designing complex systems to minimize the probability of safety-critical failures. The &quot;System Safety Engineering&quot; function helps to identify &quot;safety hazards&quot; in emerging designs, and may assist with techniques to &quot;mitigate&quot; the effects of (potentially) hazardous conditions that cannot be designed out of systems.



Security engineering
Security engineering can be viewed as an interdisciplinary field that integrates the community of practice for control systems design, reliability, safety and systems engineering. It may involve such sub-specialties as authentication of system users, system targets and others: people, objects and processes.



Software engineering
From its beginnings Software engineering has helped shape modern Systems Engineering practice. The techniques used in the handling of complexes of large software-intensive systems has had a major effect on the shaping and reshaping of the tools, methods and processes of SE.


See also


Lists



List of production topics
List of systems engineers
List of types of systems engineering
List of systems engineering at universities





Topics



Management cybernetics
Enterprise systems engineering
System of systems engineering (SoSE)


References

Further reading

Harold Chestnut, Systems Engineering Methods. Wiley, 1967.
Harry H. Goode, Robert E. Machol System Engineering: An Introduction to the Design of Large-scale Systems, McGraw-Hill, 1957.
David W. Oliver, Timothy P. Kelliher &amp; James G. Keegan, Jr. Engineering Complex Systems with Models and Objects. McGraw-Hill, 1997.
Simon Ramo, Robin K. St.Clair, The Systems Approach: Fresh Solutions to Complex Problems Through Combining Science and Practical Common Sense, Anaheim, CA: KNI, Inc, 1998.
Andrew P. Sage, Systems Engineering. Wiley IEEE, 1992.
Andrew P. Sage, Stephen R. Olson, Modeling and Simulation in Systems Engineering, 2001.

External links


INCOSE homepage.
Systems Engineering Fundamentals. Defense Acquisition University Press, 2001
Shishko, Robert et al. NASA Systems Engineering Handbook. NASA Center for AeroSpace Information, 2005
Systems Engineering Handbook NASA/SP-2007-6105 Rev1, December 2007.
Derek Hitchins, World Class Systems Engineering, 1997.
Parallel product alternatives and verification &amp; validation activities






af:Stelselingenieurswese ar:&lt;U+0647&gt;&lt;U+0646&gt;&lt;U+062F&gt;&lt;U+0633&gt;&lt;U+0629&gt; &lt;U+0627&gt;&lt;U+0644&gt;&lt;U+0623&gt;&lt;U+0646&gt;&lt;U+0638&gt;&lt;U+0645&gt;&lt;U+0629&gt; da:Systems Engineering de:Systems Engineering es:Ingenier&lt;U+00ED&gt;a de sistemas fa:&lt;U+0645&gt;&lt;U+0647&gt;&lt;U+0646&gt;&lt;U+062F&gt;&lt;U+0633&gt;&lt;U+06CC&gt; &lt;U+0633&gt;&lt;U+0627&gt;&lt;U+0645&gt;&lt;U+0627&gt;&lt;U+0646&gt;&lt;U+0647&gt;&lt;U+200C&gt;&lt;U+0647&gt;&lt;U+0627&gt; fr:Ing&lt;U+00E9&gt;nierie des syst&lt;U+00E8&gt;mes ko:&lt;U+C2DC&gt;&lt;U+C2A4&gt;&lt;U+D15C&gt; &lt;U+ACF5&gt;&lt;U+D559&gt; hi:&lt;U+0924&gt;&lt;U+0902&gt;&lt;U+0924&gt;&lt;U+094D&gt;&lt;U+0930&gt;&lt;U+0940&gt;&lt;U+092F&gt; &lt;U+092A&gt;&lt;U+094D&gt;&lt;U+0930&gt;&lt;U+094C&gt;&lt;U+0926&gt;&lt;U+094D&gt;&lt;U+092F&gt;&lt;U+094B&gt;&lt;U+0917&gt;&lt;U+093F&gt;&lt;U+0915&gt;&lt;U+0940&gt; it:Ingegneria dei sistemi he:&lt;U+05D4&gt;&lt;U+05E0&gt;&lt;U+05D3&gt;&lt;U+05E1&gt;&lt;U+05EA&gt; &lt;U+05DE&gt;&lt;U+05E2&gt;&lt;U+05E8&gt;&lt;U+05DB&gt;&lt;U+05D5&gt;&lt;U+05EA&gt; nl:Systeemkunde ja:&lt;U+30B7&gt;&lt;U+30B9&gt;&lt;U+30C6&gt;&lt;U+30E0&gt;&lt;U+5DE5&gt;&lt;U+5B66&gt; nn:Systemarbeid pt:Engenharia de sistemas ru:&lt;U+0421&gt;&lt;U+0438&gt;&lt;U+0441&gt;&lt;U+0442&gt;&lt;U+0435&gt;&lt;U+043C&gt;&lt;U+043E&gt;&lt;U+0442&gt;&lt;U+0435&gt;&lt;U+0445&gt;&lt;U+043D&gt;&lt;U+0438&gt;&lt;U+043A&gt;&lt;U+0430&gt; sk:Syst&lt;U+00E9&gt;mov&lt;U+00E9&gt; in&lt;U+017E&gt;inierstvo zh:&lt;U+7CFB&gt;&lt;U+7EDF&gt;&lt;U+5DE5&gt;&lt;U+7A0B&gt;
  Category:Engineering Category:Occupations



↩
↩
↩
↩
↩
↩
↩
↩
, p. 8. ↩
↩
↩
↩
↩
↩
↩
↩
↩
↩

↩
↩
↩
↩
↩
↩

↩
↩
&quot;Processes for Engineering a System&quot;, ANSI/EIA-632-1999, ANSI/EIA, 1999 1↩
&quot;Standard for Application and Management of the Systems Engineering Process -Description&quot;, IEEE Std 1220-1998, IEEE, 1998 2↩
&quot;Systems and software engineering - System life cycle processes&quot;, ISO/IEC 15288:2008, ISO/IEC, 2008 3↩
&quot;NASA Systems Engineering Handbook&quot;, Revision 1, NASA/SP-2007-6105, NASA, 2007 4↩
&quot;Systems Engineering Handbook&quot;, v3.1, INCOSE, 2007 5↩
&quot;A Consensus of the INCOSE Fellows&quot;, INCOSE, 2006 6↩

NASA (1995). &quot;System Analysis and Modeling Issues&quot;. In: '' NASA Systems Engineering Handbook'' June 1995. p.85.↩


↩
↩
Hamilton, M. Hackler, W.R., &lt;U+201C&gt;A Formal Universal Systems Semantics for SysML, 17th Annual International Symposium, INCOSE 2007, San Diego, CA, June 2007.↩
Hollnagel E. &amp; Woods D. D. (1983). Cognitive systems engineering: New wine in new bottles. International Journal of Man-Machine Studies, 18, 583-600.↩
Hollnagel, E. &amp; Woods, D. D. (2005) Joint cognitive systems: The foundations of cognitive systems engineering. Taylor &amp; Francis↩
Woods, D. D. &amp; Hollnagel, E. (2006). Joint cognitive systems: Patterns in cognitive systems engineering. Taylor &amp; Francis.↩
(see articles for discussion: 7 and 8)↩


